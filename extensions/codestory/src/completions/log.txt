{
  "message": "sidecar.providerInlineCompletionItems",
  "event_name": "start",
  "id": "completions-167",
  "timestamp": "2024-02-14T14:34:34.794Z"
}
{
  "message": "sidecar.initialRequest.docContext",
  "event_name": "sidecar.initialRequest.docContext",
  "id": "completions-167",
  "timestamp": "2024-02-14T14:34:34.795Z"
}
{
  "message": "sidecar.providerOnCancellationRequested",
  "event_name": "aborting",
  "id": "completions-167",
  "timestamp": "2024-02-14T14:34:34.851Z"
}
{
  "message": "sidecar.providerInlineCompletionItems",
  "event_name": "start",
  "id": "completions-168",
  "timestamp": "2024-02-14T14:34:34.902Z"
}
{
  "message": "sidecar.initialRequest.docContext",
  "event_name": "sidecar.initialRequest.docContext",
  "id": "completions-168",
  "timestamp": "2024-02-14T14:34:34.902Z"
}
{
  "message": "sidecar.inlineProvider",
  "event_name": "generate_completions",
  "id": "completions-168",
  "timestamp": "2024-02-14T14:34:35.028Z"
}
{
  "message": "sidecar.inlineProvider.send_completion_request",
  "event_name": "send_completion_request",
  "id": "completions-168",
  "timestamp": "2024-02-14T14:34:35.028Z"
}
{
  "message": "sidecar.inlineProvider.responseStream",
  "event_name": "response_stream",
  "id": "completions-168",
  "time_taken": 0.024915993213653564,
  "timestamp": "2024-02-14T14:34:35.028Z"
}
{
  "message": "sidecar.completion_request.generator",
  "event_name": "sidecar.completion_request.generator",
  "id": "completions-168",
  "timestamp": "2024-02-14T14:34:35.028Z"
}
{
  "message": "sidecar.providerOnCancellationRequested",
  "event_name": "aborting",
  "id": "completions-168",
  "timestamp": "2024-02-14T14:34:35.100Z"
}
{
  "message": "sidecar.providerInlineCompletionItems",
  "event_name": "start",
  "id": "completions-169",
  "timestamp": "2024-02-14T14:34:35.154Z"
}
{
  "message": "sidecar.initialRequest.docContext",
  "event_name": "sidecar.initialRequest.docContext",
  "id": "completions-169",
  "timestamp": "2024-02-14T14:34:35.154Z"
}
{
  "message": "sidecar.providerOnCancellationRequested",
  "event_name": "aborting",
  "id": "completions-169",
  "timestamp": "2024-02-14T14:34:35.199Z"
}
{
  "message": "sidecar.providerInlineCompletionItems",
  "event_name": "start",
  "id": "completions-170",
  "timestamp": "2024-02-14T14:34:35.274Z"
}
{
  "message": "sidecar.initialRequest.docContext",
  "event_name": "sidecar.initialRequest.docContext",
  "id": "completions-170",
  "timestamp": "2024-02-14T14:34:35.275Z"
}
{
  "message": "sidecar.providerOnCancellationRequested",
  "event_name": "aborting",
  "id": "completions-170",
  "timestamp": "2024-02-14T14:34:35.292Z"
}
{
  "message": "sidecar.providerInlineCompletionItems",
  "event_name": "start",
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:35.383Z"
}
{
  "message": "sidecar.initialRequest.docContext",
  "event_name": "sidecar.initialRequest.docContext",
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:35.383Z"
}
{
  "message": "sidecar.inlineProvider",
  "event_name": "generate_completions",
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:35.511Z"
}
{
  "message": "sidecar.inlineProvider.send_completion_request",
  "event_name": "send_completion_request",
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:35.511Z"
}
{
  "message": "sidecar.inlineProvider.responseStream",
  "event_name": "response_stream",
  "id": "completions-171",
  "time_taken": 0.027125000953674316,
  "timestamp": "2024-02-14T14:34:35.512Z"
}
{
  "message": "sidecar.completion_request.generator",
  "event_name": "sidecar.completion_request.generator",
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:35.512Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": false,
  "multiline": true,
  "completion": "(",
  "completion_len": 1,
  "hotStreakExtractor": "not_present",
  "timestamp": "2024-02-14T14:34:36.422Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "(",
  "timestamp": "2024-02-14T14:34:36.422Z"
}
{
  "message": "sidecar.multiline.completion_extract",
  "event_name": "sidecar.multiline.completion_extract",
  "completion": null,
  "raw_completion": "(",
  "timestamp": "2024-02-14T14:34:36.422Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": false,
  "multiline": true,
  "completion": "(trigger",
  "completion_len": 8,
  "hotStreakExtractor": "not_present",
  "timestamp": "2024-02-14T14:34:36.452Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "(trigger",
  "timestamp": "2024-02-14T14:34:36.452Z"
}
{
  "message": "sidecar.multiline.completion_extract",
  "event_name": "sidecar.multiline.completion_extract",
  "completion": null,
  "raw_completion": "(trigger",
  "timestamp": "2024-02-14T14:34:36.452Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": false,
  "multiline": true,
  "completion": "(triggerKind",
  "completion_len": 12,
  "hotStreakExtractor": "not_present",
  "timestamp": "2024-02-14T14:34:36.479Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "(triggerKind",
  "timestamp": "2024-02-14T14:34:36.479Z"
}
{
  "message": "sidecar.multiline.completion_extract",
  "event_name": "sidecar.multiline.completion_extract",
  "completion": null,
  "raw_completion": "(triggerKind",
  "timestamp": "2024-02-14T14:34:36.479Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": false,
  "multiline": true,
  "completion": "(triggerKind ===",
  "completion_len": 16,
  "hotStreakExtractor": "not_present",
  "timestamp": "2024-02-14T14:34:36.505Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "(triggerKind ===",
  "timestamp": "2024-02-14T14:34:36.505Z"
}
{
  "message": "sidecar.multiline.completion_extract",
  "event_name": "sidecar.multiline.completion_extract",
  "completion": null,
  "raw_completion": "(triggerKind ===",
  "timestamp": "2024-02-14T14:34:36.505Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === Tr",
  "completion_len": 19,
  "hotStreakExtractor": "not_present",
  "timestamp": "2024-02-14T14:34:36.533Z"
}
{
  "message": "sidecar.multiline.completion_extract",
  "event_name": "sidecar.multiline.completion_extract",
  "completion": {
    "insertText": "(triggerKind === Tr",
    "points": {
      "start": {
        "row": 320,
        "column": 4
      },
      "end": {
        "row": 321,
        "column": 23
      }
    },
    "tree": {
      "0": 9438552,
      "language": {
        "0": 3155136,
        "types": [
          null,
          "identifier",
          "hash_bang_line",
          "export",
          "*",
          "default",
          "type",
          "=",
          "as",
          "namespace",
          "{",
          ",",
          "}",
          "typeof",
          "import",
          "from",
          "var",
          "let",
          "const",
          "!",
          "else",
          "if",
          "switch",
          "for",
          "(",
          ")",
          "await",
          "in",
          "of",
          "while",
          "do",
          "try",
          "with",
          "break",
          "continue",
          "debugger",
          "return",
          "throw",
          ";",
          ":",
          "case",
          "catch",
          "finally",
          "yield",
          "[",
          "]",
          "<",
          ">",
          "/",
          ".",
          "class",
          "async",
          "function",
          "=>",
          "?.",
          "new",
          "+=",
          "-=",
          "*=",
          "/=",
          "%=",
          "^=",
          "&=",
          "|=",
          ">>=",
          ">>>=",
          "<<=",
          "**=",
          "&&=",
          "||=",
          "??=",
          "...",
          "&&",
          "||",
          ">>",
          ">>>",
          "<<",
          "&",
          "^",
          "|",
          "+",
          "-",
          "%",
          "**",
          "<=",
          "==",
          "===",
          "!=",
          "!==",
          ">=",
          "??",
          "instanceof",
          "~",
          "void",
          "delete",
          "++",
          "--",
          "\"",
          "'",
          "string_fragment",
          "string_fragment",
          "escape_sequence",
          "comment",
          "`",
          "${",
          "/",
          "regex_pattern",
          "regex_flags",
          "number",
          "private_property_identifier",
          "target",
          "this",
          "super",
          "true",
          "false",
          "null",
          "undefined",
          "@",
          "static",
          "readonly",
          "get",
          "set",
          "?",
          "declare",
          "public",
          "private",
          "protected",
          "override",
          "module",
          "any",
          "number",
          "boolean",
          "string",
          "symbol",
          "abstract",
          "require",
          "extends",
          "implements",
          "global",
          "interface",
          "enum",
          "-?:",
          "?:",
          "asserts",
          "infer",
          "is",
          "keyof",
          "unknown",
          "never",
          "object",
          "{|",
          "|}",
          null,
          null,
          "?",
          null,
          "program",
          "export_statement",
          "export_clause",
          "export_specifier",
          null,
          "import",
          "import_statement",
          "import_clause",
          null,
          "namespace_import",
          "named_imports",
          "expression_statement",
          "variable_declaration",
          "lexical_declaration",
          "variable_declarator",
          "statement_block",
          "else_clause",
          "if_statement",
          "switch_statement",
          "for_statement",
          "for_in_statement",
          null,
          "while_statement",
          "do_statement",
          "try_statement",
          "with_statement",
          "break_statement",
          "continue_statement",
          "debugger_statement",
          "return_statement",
          "throw_statement",
          "empty_statement",
          "labeled_statement",
          "switch_body",
          "switch_case",
          "switch_default",
          "catch_clause",
          "finally_clause",
          "parenthesized_expression",
          null,
          null,
          "yield_expression",
          "object",
          "object_pattern",
          "assignment_pattern",
          "object_assignment_pattern",
          "array",
          "array_pattern",
          "nested_identifier",
          "class",
          "class_declaration",
          "class_heritage",
          "function",
          "function_declaration",
          "generator_function",
          "generator_function_declaration",
          "arrow_function",
          null,
          null,
          "call_expression",
          "new_expression",
          "await_expression",
          "member_expression",
          "subscript_expression",
          "assignment_expression",
          null,
          "augmented_assignment_expression",
          null,
          null,
          "spread_element",
          "ternary_expression",
          "binary_expression",
          "unary_expression",
          "update_expression",
          "sequence_expression",
          "string",
          "template_string",
          "template_substitution",
          "regex",
          "meta_property",
          "arguments",
          "decorator",
          "member_expression",
          "call_expression",
          "class_body",
          "formal_parameters",
          null,
          "rest_pattern",
          "method_definition",
          "pair",
          "pair_pattern",
          null,
          "computed_property_name",
          "public_field_definition",
          "non_null_expression",
          "method_signature",
          "abstract_method_signature",
          "function_signature",
          "type_assertion",
          "as_expression",
          "import_require_clause",
          "extends_clause",
          "implements_clause",
          "ambient_declaration",
          "abstract_class_declaration",
          "module",
          "internal_module",
          null,
          "import_alias",
          "nested_type_identifier",
          "interface_declaration",
          "extends_type_clause",
          "enum_declaration",
          "enum_body",
          "enum_assignment",
          "type_alias_declaration",
          "accessibility_modifier",
          "override_modifier",
          "required_parameter",
          "optional_parameter",
          null,
          "omitting_type_annotation",
          "opting_type_annotation",
          "type_annotation",
          "asserts",
          null,
          "required_parameter",
          "optional_parameter",
          "optional_type",
          "rest_type",
          null,
          "constructor_type",
          null,
          "template_type",
          "template_literal_type",
          "infer_type",
          "conditional_type",
          "generic_type",
          "type_predicate",
          "type_predicate_annotation",
          "member_expression",
          "subscript_expression",
          "call_expression",
          "type_query",
          "index_type_query",
          "lookup_type",
          "mapped_type_clause",
          "literal_type",
          "unary_expression",
          "existential_type",
          "flow_maybe_type",
          "parenthesized_type",
          "predefined_type",
          "type_arguments",
          "object_type",
          "call_signature",
          "property_signature",
          "type_parameters",
          "type_parameter",
          "default_type",
          "constraint",
          "construct_signature",
          "index_signature",
          "array_type",
          "tuple_type",
          "readonly_type",
          "union_type",
          "intersection_type",
          "function_type",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "import_specifier",
          "namespace_export",
          "property_identifier",
          "shorthand_property_identifier",
          "shorthand_property_identifier_pattern",
          "statement_identifier",
          "this_type",
          "type_identifier"
        ],
        "fields": [
          null,
          "alias",
          "alternative",
          "argument",
          "arguments",
          "body",
          "condition",
          "consequence",
          "constraint",
          "constructor",
          "declaration",
          "decorator",
          "finalizer",
          "flags",
          "function",
          "handler",
          "increment",
          "index",
          "index_type",
          "initializer",
          "key",
          "kind",
          "label",
          "left",
          "module",
          "name",
          "object",
          "operator",
          "parameter",
          "parameters",
          "pattern",
          "property",
          "return_type",
          "right",
          "sign",
          "source",
          "type",
          "type_arguments",
          "type_parameters",
          "value"
        ]
      }
    },
    "parseErrorCount": 0
  },
  "raw_completion": "(triggerKind === Tr",
  "timestamp": "2024-02-14T14:34:36.537Z"
}
{
  "message": "sidecar.hotstreak.create",
  "event_name": "hotstreak.create",
  "raw_completion": {
    "insertText": "(triggerKind === Tr",
    "points": {
      "start": {
        "row": 320,
        "column": 4
      },
      "end": {
        "row": 321,
        "column": 23
      }
    },
    "tree": {
      "0": 9438552,
      "language": {
        "0": 3155136,
        "types": [
          null,
          "identifier",
          "hash_bang_line",
          "export",
          "*",
          "default",
          "type",
          "=",
          "as",
          "namespace",
          "{",
          ",",
          "}",
          "typeof",
          "import",
          "from",
          "var",
          "let",
          "const",
          "!",
          "else",
          "if",
          "switch",
          "for",
          "(",
          ")",
          "await",
          "in",
          "of",
          "while",
          "do",
          "try",
          "with",
          "break",
          "continue",
          "debugger",
          "return",
          "throw",
          ";",
          ":",
          "case",
          "catch",
          "finally",
          "yield",
          "[",
          "]",
          "<",
          ">",
          "/",
          ".",
          "class",
          "async",
          "function",
          "=>",
          "?.",
          "new",
          "+=",
          "-=",
          "*=",
          "/=",
          "%=",
          "^=",
          "&=",
          "|=",
          ">>=",
          ">>>=",
          "<<=",
          "**=",
          "&&=",
          "||=",
          "??=",
          "...",
          "&&",
          "||",
          ">>",
          ">>>",
          "<<",
          "&",
          "^",
          "|",
          "+",
          "-",
          "%",
          "**",
          "<=",
          "==",
          "===",
          "!=",
          "!==",
          ">=",
          "??",
          "instanceof",
          "~",
          "void",
          "delete",
          "++",
          "--",
          "\"",
          "'",
          "string_fragment",
          "string_fragment",
          "escape_sequence",
          "comment",
          "`",
          "${",
          "/",
          "regex_pattern",
          "regex_flags",
          "number",
          "private_property_identifier",
          "target",
          "this",
          "super",
          "true",
          "false",
          "null",
          "undefined",
          "@",
          "static",
          "readonly",
          "get",
          "set",
          "?",
          "declare",
          "public",
          "private",
          "protected",
          "override",
          "module",
          "any",
          "number",
          "boolean",
          "string",
          "symbol",
          "abstract",
          "require",
          "extends",
          "implements",
          "global",
          "interface",
          "enum",
          "-?:",
          "?:",
          "asserts",
          "infer",
          "is",
          "keyof",
          "unknown",
          "never",
          "object",
          "{|",
          "|}",
          null,
          null,
          "?",
          null,
          "program",
          "export_statement",
          "export_clause",
          "export_specifier",
          null,
          "import",
          "import_statement",
          "import_clause",
          null,
          "namespace_import",
          "named_imports",
          "expression_statement",
          "variable_declaration",
          "lexical_declaration",
          "variable_declarator",
          "statement_block",
          "else_clause",
          "if_statement",
          "switch_statement",
          "for_statement",
          "for_in_statement",
          null,
          "while_statement",
          "do_statement",
          "try_statement",
          "with_statement",
          "break_statement",
          "continue_statement",
          "debugger_statement",
          "return_statement",
          "throw_statement",
          "empty_statement",
          "labeled_statement",
          "switch_body",
          "switch_case",
          "switch_default",
          "catch_clause",
          "finally_clause",
          "parenthesized_expression",
          null,
          null,
          "yield_expression",
          "object",
          "object_pattern",
          "assignment_pattern",
          "object_assignment_pattern",
          "array",
          "array_pattern",
          "nested_identifier",
          "class",
          "class_declaration",
          "class_heritage",
          "function",
          "function_declaration",
          "generator_function",
          "generator_function_declaration",
          "arrow_function",
          null,
          null,
          "call_expression",
          "new_expression",
          "await_expression",
          "member_expression",
          "subscript_expression",
          "assignment_expression",
          null,
          "augmented_assignment_expression",
          null,
          null,
          "spread_element",
          "ternary_expression",
          "binary_expression",
          "unary_expression",
          "update_expression",
          "sequence_expression",
          "string",
          "template_string",
          "template_substitution",
          "regex",
          "meta_property",
          "arguments",
          "decorator",
          "member_expression",
          "call_expression",
          "class_body",
          "formal_parameters",
          null,
          "rest_pattern",
          "method_definition",
          "pair",
          "pair_pattern",
          null,
          "computed_property_name",
          "public_field_definition",
          "non_null_expression",
          "method_signature",
          "abstract_method_signature",
          "function_signature",
          "type_assertion",
          "as_expression",
          "import_require_clause",
          "extends_clause",
          "implements_clause",
          "ambient_declaration",
          "abstract_class_declaration",
          "module",
          "internal_module",
          null,
          "import_alias",
          "nested_type_identifier",
          "interface_declaration",
          "extends_type_clause",
          "enum_declaration",
          "enum_body",
          "enum_assignment",
          "type_alias_declaration",
          "accessibility_modifier",
          "override_modifier",
          "required_parameter",
          "optional_parameter",
          null,
          "omitting_type_annotation",
          "opting_type_annotation",
          "type_annotation",
          "asserts",
          null,
          "required_parameter",
          "optional_parameter",
          "optional_type",
          "rest_type",
          null,
          "constructor_type",
          null,
          "template_type",
          "template_literal_type",
          "infer_type",
          "conditional_type",
          "generic_type",
          "type_predicate",
          "type_predicate_annotation",
          "member_expression",
          "subscript_expression",
          "call_expression",
          "type_query",
          "index_type_query",
          "lookup_type",
          "mapped_type_clause",
          "literal_type",
          "unary_expression",
          "existential_type",
          "flow_maybe_type",
          "parenthesized_type",
          "predefined_type",
          "type_arguments",
          "object_type",
          "call_signature",
          "property_signature",
          "type_parameters",
          "type_parameter",
          "default_type",
          "constraint",
          "construct_signature",
          "index_signature",
          "array_type",
          "tuple_type",
          "readonly_type",
          "union_type",
          "intersection_type",
          "function_type",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          "import_specifier",
          "namespace_export",
          "property_identifier",
          "shorthand_property_identifier",
          "shorthand_property_identifier_pattern",
          "statement_identifier",
          "this_type",
          "type_identifier"
        ],
        "fields": [
          null,
          "alias",
          "alternative",
          "argument",
          "arguments",
          "body",
          "condition",
          "consequence",
          "constraint",
          "constructor",
          "declaration",
          "decorator",
          "finalizer",
          "flags",
          "function",
          "handler",
          "increment",
          "index",
          "index_type",
          "initializer",
          "key",
          "kind",
          "label",
          "left",
          "module",
          "name",
          "object",
          "operator",
          "parameter",
          "parameters",
          "pattern",
          "property",
          "return_type",
          "right",
          "sign",
          "source",
          "type",
          "type_arguments",
          "type_parameters",
          "value"
        ]
      }
    },
    "parseErrorCount": 0,
    "nodeTypes": {
      "atCursor": "statement_block",
      "parent": "function_declaration",
      "grandparent": "program",
      "lastAncestorOnTheSameLine": "statement_block"
    },
    "nodeTypesWithCompletion": {
      "atCursor": "if_statement",
      "parent": "statement_block",
      "grandparent": "function_declaration",
      "greatGrandparent": "program",
      "lastAncestorOnTheSameLine": "if_statement"
    }
  },
  "raw_completion_len": 19,
  "timestamp": "2024-02-14T14:34:36.538Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === Tr",
  "raw_completion_len": 19,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.538Z"
}
{
  "message": "sidecar.hotstreak.unprocessedCompletion",
  "event_name": "sidecar.hotstreak.unprocessedCompletion.empty",
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.538Z"
}
{
  "message": "sidecar.providerInlineCompletionItems",
  "event_name": "start",
  "id": "completions-172",
  "timestamp": "2024-02-14T14:34:36.560Z"
}
{
  "message": "sidecar.initialRequest.docContext",
  "event_name": "sidecar.initialRequest.docContext",
  "id": "completions-172",
  "timestamp": "2024-02-14T14:34:36.560Z"
}
{
  "message": "sidecar.reuseLastCandidate",
  "reuse": true,
  "id": "completions-172",
  "timestamp": "2024-02-14T14:34:36.560Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === Trigger",
  "completion_len": 24,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.567Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === Trigger",
  "raw_completion_len": 24,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.568Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "ger",
  "timestamp": "2024-02-14T14:34:36.568Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "ger",
  "timestamp": "2024-02-14T14:34:36.568Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === Trigger",
  "unprocessed_completion": "ger",
  "timestamp": "2024-02-14T14:34:36.568Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind",
  "completion_len": 28,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.587Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind",
  "raw_completion_len": 28,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.587Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind",
  "timestamp": "2024-02-14T14:34:36.587Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind",
  "timestamp": "2024-02-14T14:34:36.587Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind",
  "unprocessed_completion": "gerKind",
  "timestamp": "2024-02-14T14:34:36.587Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.",
  "completion_len": 29,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.616Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.",
  "raw_completion_len": 29,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.616Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.",
  "timestamp": "2024-02-14T14:34:36.616Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.",
  "timestamp": "2024-02-14T14:34:36.616Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.",
  "unprocessed_completion": "gerKind.",
  "timestamp": "2024-02-14T14:34:36.616Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Man",
  "completion_len": 32,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.645Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Man",
  "raw_completion_len": 32,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.645Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Man",
  "timestamp": "2024-02-14T14:34:36.645Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Man",
  "timestamp": "2024-02-14T14:34:36.645Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Man",
  "unprocessed_completion": "gerKind.Man",
  "timestamp": "2024-02-14T14:34:36.645Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual",
  "completion_len": 35,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.676Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual",
  "raw_completion_len": 35,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.676Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual",
  "timestamp": "2024-02-14T14:34:36.676Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual",
  "timestamp": "2024-02-14T14:34:36.676Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual",
  "unprocessed_completion": "gerKind.Manual",
  "timestamp": "2024-02-14T14:34:36.676Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual &&",
  "completion_len": 38,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.699Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual &&",
  "raw_completion_len": 38,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.699Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual &&",
  "timestamp": "2024-02-14T14:34:36.699Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual &&",
  "timestamp": "2024-02-14T14:34:36.700Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual &&",
  "unprocessed_completion": "gerKind.Manual &&",
  "timestamp": "2024-02-14T14:34:36.700Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !",
  "completion_len": 40,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.734Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !",
  "raw_completion_len": 40,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.734Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !",
  "timestamp": "2024-02-14T14:34:36.734Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !",
  "timestamp": "2024-02-14T14:34:36.734Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !",
  "unprocessed_completion": "gerKind.Manual && !",
  "timestamp": "2024-02-14T14:34:36.734Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !mult",
  "completion_len": 44,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.755Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !mult",
  "raw_completion_len": 44,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.755Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !mult",
  "timestamp": "2024-02-14T14:34:36.755Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !mult",
  "timestamp": "2024-02-14T14:34:36.755Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !mult",
  "unprocessed_completion": "gerKind.Manual && !mult",
  "timestamp": "2024-02-14T14:34:36.755Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multil",
  "completion_len": 46,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.785Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multil",
  "raw_completion_len": 46,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.785Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multil",
  "timestamp": "2024-02-14T14:34:36.785Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multil",
  "timestamp": "2024-02-14T14:34:36.785Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multil",
  "unprocessed_completion": "gerKind.Manual && !multil",
  "timestamp": "2024-02-14T14:34:36.785Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multiline",
  "completion_len": 49,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.811Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multiline",
  "raw_completion_len": 49,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.811Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multiline",
  "timestamp": "2024-02-14T14:34:36.811Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multiline",
  "timestamp": "2024-02-14T14:34:36.811Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multiline",
  "unprocessed_completion": "gerKind.Manual && !multiline",
  "timestamp": "2024-02-14T14:34:36.811Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTr",
  "completion_len": 51,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.839Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTr",
  "raw_completion_len": 51,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.839Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTr",
  "timestamp": "2024-02-14T14:34:36.839Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTr",
  "timestamp": "2024-02-14T14:34:36.839Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTr",
  "unprocessed_completion": "gerKind.Manual && !multilineTr",
  "timestamp": "2024-02-14T14:34:36.839Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger",
  "completion_len": 56,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.868Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger",
  "raw_completion_len": 56,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.868Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger",
  "timestamp": "2024-02-14T14:34:36.868Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger",
  "timestamp": "2024-02-14T14:34:36.868Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger",
  "timestamp": "2024-02-14T14:34:36.868Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger)",
  "completion_len": 57,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.894Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger)",
  "raw_completion_len": 57,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.894Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger)",
  "timestamp": "2024-02-14T14:34:36.894Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger)",
  "timestamp": "2024-02-14T14:34:36.894Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger)",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger)",
  "timestamp": "2024-02-14T14:34:36.894Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {",
  "completion_len": 59,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.923Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {",
  "raw_completion_len": 59,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.923Z"
}
{
  "message": "sidecar.canUsePartialCompletion",
  "event_name": "sidecar.canUsePartialCompletion.has_complete_first_line",
  "event_value": "false",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {",
  "timestamp": "2024-02-14T14:34:36.923Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {",
  "timestamp": "2024-02-14T14:34:36.923Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {",
  "timestamp": "2024-02-14T14:34:36.923Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n",
  "completion_len": 60,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.979Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n",
  "raw_completion_len": 60,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.979Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n",
  "timestamp": "2024-02-14T14:34:36.988Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n",
  "timestamp": "2024-02-14T14:34:36.988Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n",
  "timestamp": "2024-02-14T14:34:36.988Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t",
  "completion_len": 61,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:36.988Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t",
  "raw_completion_len": 61,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:36.988Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t",
  "timestamp": "2024-02-14T14:34:36.997Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t",
  "timestamp": "2024-02-14T14:34:36.997Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t",
  "timestamp": "2024-02-14T14:34:36.997Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t//",
  "completion_len": 64,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.005Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t//",
  "raw_completion_len": 64,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.005Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t//",
  "timestamp": "2024-02-14T14:34:37.016Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t//",
  "timestamp": "2024-02-14T14:34:37.016Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t//",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t//",
  "timestamp": "2024-02-14T14:34:37.016Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If",
  "completion_len": 67,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.048Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If",
  "raw_completion_len": 67,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.048Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If",
  "timestamp": "2024-02-14T14:34:37.057Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If",
  "timestamp": "2024-02-14T14:34:37.057Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If",
  "timestamp": "2024-02-14T14:34:37.057Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the",
  "completion_len": 71,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.061Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the",
  "raw_completion_len": 71,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.061Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the",
  "timestamp": "2024-02-14T14:34:37.072Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the",
  "timestamp": "2024-02-14T14:34:37.072Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the",
  "timestamp": "2024-02-14T14:34:37.072Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user",
  "completion_len": 76,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.090Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user",
  "raw_completion_len": 76,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.090Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user",
  "timestamp": "2024-02-14T14:34:37.101Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user",
  "timestamp": "2024-02-14T14:34:37.101Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user",
  "timestamp": "2024-02-14T14:34:37.101Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually",
  "completion_len": 85,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.125Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually",
  "raw_completion_len": 85,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.125Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually",
  "timestamp": "2024-02-14T14:34:37.135Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually",
  "timestamp": "2024-02-14T14:34:37.135Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually",
  "timestamp": "2024-02-14T14:34:37.135Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered",
  "completion_len": 95,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.148Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered",
  "raw_completion_len": 95,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.148Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered",
  "timestamp": "2024-02-14T14:34:37.157Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered",
  "timestamp": "2024-02-14T14:34:37.157Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered",
  "timestamp": "2024-02-14T14:34:37.157Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the",
  "completion_len": 99,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.180Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the",
  "raw_completion_len": 99,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.180Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the",
  "timestamp": "2024-02-14T14:34:37.189Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the",
  "timestamp": "2024-02-14T14:34:37.189Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the",
  "timestamp": "2024-02-14T14:34:37.189Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion",
  "completion_len": 110,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.201Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion",
  "raw_completion_len": 110,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.201Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion",
  "timestamp": "2024-02-14T14:34:37.211Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion",
  "timestamp": "2024-02-14T14:34:37.211Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion",
  "timestamp": "2024-02-14T14:34:37.211Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion,",
  "completion_len": 111,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.230Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion,",
  "raw_completion_len": 111,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.230Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion,",
  "timestamp": "2024-02-14T14:34:37.240Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion,",
  "timestamp": "2024-02-14T14:34:37.240Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion,",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion,",
  "timestamp": "2024-02-14T14:34:37.240Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we",
  "completion_len": 114,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.258Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we",
  "raw_completion_len": 114,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.258Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we",
  "timestamp": "2024-02-14T14:34:37.269Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we",
  "timestamp": "2024-02-14T14:34:37.269Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we",
  "timestamp": "2024-02-14T14:34:37.269Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should",
  "completion_len": 121,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.283Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should",
  "raw_completion_len": 121,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.283Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should",
  "timestamp": "2024-02-14T14:34:37.293Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should",
  "timestamp": "2024-02-14T14:34:37.293Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should",
  "timestamp": "2024-02-14T14:34:37.293Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not",
  "completion_len": 125,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.312Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not",
  "raw_completion_len": 125,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.312Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not",
  "timestamp": "2024-02-14T14:34:37.324Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not",
  "timestamp": "2024-02-14T14:34:37.325Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not",
  "timestamp": "2024-02-14T14:34:37.325Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make",
  "completion_len": 130,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.338Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make",
  "raw_completion_len": 130,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.338Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make",
  "timestamp": "2024-02-14T14:34:37.348Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make",
  "timestamp": "2024-02-14T14:34:37.348Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make",
  "timestamp": "2024-02-14T14:34:37.348Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a",
  "completion_len": 132,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.368Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a",
  "raw_completion_len": 132,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.368Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a",
  "timestamp": "2024-02-14T14:34:37.378Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a",
  "timestamp": "2024-02-14T14:34:37.378Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a",
  "timestamp": "2024-02-14T14:34:37.378Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request",
  "completion_len": 140,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.393Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request",
  "raw_completion_len": 140,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.393Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request",
  "timestamp": "2024-02-14T14:34:37.403Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request",
  "timestamp": "2024-02-14T14:34:37.403Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request",
  "timestamp": "2024-02-14T14:34:37.403Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if",
  "completion_len": 143,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.425Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if",
  "raw_completion_len": 143,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.425Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if",
  "timestamp": "2024-02-14T14:34:37.434Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if",
  "timestamp": "2024-02-14T14:34:37.434Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if",
  "timestamp": "2024-02-14T14:34:37.434Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the",
  "completion_len": 147,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.450Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the",
  "raw_completion_len": 147,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.450Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the",
  "timestamp": "2024-02-14T14:34:37.464Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the",
  "timestamp": "2024-02-14T14:34:37.464Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the",
  "timestamp": "2024-02-14T14:34:37.464Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n",
  "completion_len": 148,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.511Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n",
  "raw_completion_len": 148,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.511Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n",
  "timestamp": "2024-02-14T14:34:37.527Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n",
  "timestamp": "2024-02-14T14:34:37.527Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n",
  "timestamp": "2024-02-14T14:34:37.527Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t",
  "completion_len": 149,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.527Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t",
  "raw_completion_len": 149,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.527Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t",
  "timestamp": "2024-02-14T14:34:37.546Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t",
  "timestamp": "2024-02-14T14:34:37.546Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t",
  "timestamp": "2024-02-14T14:34:37.546Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t//",
  "completion_len": 152,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.553Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t//",
  "raw_completion_len": 152,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.553Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t//",
  "timestamp": "2024-02-14T14:34:37.564Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t//",
  "timestamp": "2024-02-14T14:34:37.564Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t//",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t//",
  "timestamp": "2024-02-14T14:34:37.564Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current",
  "completion_len": 160,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.568Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current",
  "raw_completion_len": 160,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.568Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current",
  "timestamp": "2024-02-14T14:34:37.580Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current",
  "timestamp": "2024-02-14T14:34:37.580Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current",
  "timestamp": "2024-02-14T14:34:37.580Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line",
  "completion_len": 165,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.593Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line",
  "raw_completion_len": 165,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.593Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line",
  "timestamp": "2024-02-14T14:34:37.603Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line",
  "timestamp": "2024-02-14T14:34:37.603Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line",
  "timestamp": "2024-02-14T14:34:37.603Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is",
  "completion_len": 168,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.621Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is",
  "raw_completion_len": 168,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.621Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is",
  "timestamp": "2024-02-14T14:34:37.631Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is",
  "timestamp": "2024-02-14T14:34:37.631Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is",
  "timestamp": "2024-02-14T14:34:37.631Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty",
  "completion_len": 174,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.643Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty",
  "raw_completion_len": 174,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.643Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty",
  "timestamp": "2024-02-14T14:34:37.654Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty",
  "timestamp": "2024-02-14T14:34:37.654Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty",
  "timestamp": "2024-02-14T14:34:37.654Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.",
  "completion_len": 175,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.673Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.",
  "raw_completion_len": 175,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.673Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.",
  "timestamp": "2024-02-14T14:34:37.683Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.",
  "timestamp": "2024-02-14T14:34:37.683Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.",
  "timestamp": "2024-02-14T14:34:37.683Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n",
  "completion_len": 176,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.732Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n",
  "raw_completion_len": 176,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.732Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n",
  "timestamp": "2024-02-14T14:34:37.741Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n",
  "timestamp": "2024-02-14T14:34:37.741Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n",
  "timestamp": "2024-02-14T14:34:37.741Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t",
  "completion_len": 177,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.742Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t",
  "raw_completion_len": 177,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.742Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t",
  "timestamp": "2024-02-14T14:34:37.751Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t",
  "timestamp": "2024-02-14T14:34:37.751Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t",
  "timestamp": "2024-02-14T14:34:37.751Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst",
  "completion_len": 183,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.757Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst",
  "raw_completion_len": 183,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.757Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst",
  "timestamp": "2024-02-14T14:34:37.767Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst",
  "timestamp": "2024-02-14T14:34:37.767Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst",
  "timestamp": "2024-02-14T14:34:37.767Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst current",
  "completion_len": 191,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.785Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst current",
  "raw_completion_len": 191,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.785Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst current",
  "timestamp": "2024-02-14T14:34:37.795Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst current",
  "timestamp": "2024-02-14T14:34:37.795Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst current",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst current",
  "timestamp": "2024-02-14T14:34:37.795Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine",
  "completion_len": 195,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.811Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine",
  "raw_completion_len": 195,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.812Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine",
  "timestamp": "2024-02-14T14:34:37.821Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine",
  "timestamp": "2024-02-14T14:34:37.821Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine",
  "timestamp": "2024-02-14T14:34:37.821Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine =",
  "completion_len": 197,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.841Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine =",
  "raw_completion_len": 197,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.841Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine =",
  "timestamp": "2024-02-14T14:34:37.850Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine =",
  "timestamp": "2024-02-14T14:34:37.850Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine =",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine =",
  "timestamp": "2024-02-14T14:34:37.850Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document",
  "completion_len": 206,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.866Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document",
  "raw_completion_len": 206,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.866Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document",
  "timestamp": "2024-02-14T14:34:37.876Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document",
  "timestamp": "2024-02-14T14:34:37.876Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document",
  "timestamp": "2024-02-14T14:34:37.876Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.",
  "completion_len": 207,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.894Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.",
  "raw_completion_len": 207,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.894Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.",
  "timestamp": "2024-02-14T14:34:37.903Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.",
  "timestamp": "2024-02-14T14:34:37.903Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.",
  "timestamp": "2024-02-14T14:34:37.903Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.line",
  "completion_len": 211,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.923Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.line",
  "raw_completion_len": 211,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.923Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.line",
  "timestamp": "2024-02-14T14:34:37.934Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.line",
  "timestamp": "2024-02-14T14:34:37.934Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.line",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.line",
  "timestamp": "2024-02-14T14:34:37.934Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt",
  "completion_len": 213,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.952Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt",
  "raw_completion_len": 213,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.952Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt",
  "timestamp": "2024-02-14T14:34:37.961Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt",
  "timestamp": "2024-02-14T14:34:37.961Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt",
  "timestamp": "2024-02-14T14:34:37.961Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(",
  "completion_len": 214,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:37.979Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(",
  "raw_completion_len": 214,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:37.979Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(",
  "timestamp": "2024-02-14T14:34:37.989Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(",
  "timestamp": "2024-02-14T14:34:37.989Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(",
  "timestamp": "2024-02-14T14:34:37.989Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position",
  "completion_len": 222,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.007Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position",
  "raw_completion_len": 222,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.007Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position",
  "timestamp": "2024-02-14T14:34:38.017Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position",
  "timestamp": "2024-02-14T14:34:38.017Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position",
  "timestamp": "2024-02-14T14:34:38.017Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.",
  "completion_len": 223,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.036Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.",
  "raw_completion_len": 223,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.036Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.",
  "timestamp": "2024-02-14T14:34:38.046Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.",
  "timestamp": "2024-02-14T14:34:38.046Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.",
  "timestamp": "2024-02-14T14:34:38.046Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line",
  "completion_len": 227,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.065Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line",
  "raw_completion_len": 227,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.065Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line",
  "timestamp": "2024-02-14T14:34:38.075Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line",
  "timestamp": "2024-02-14T14:34:38.075Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line",
  "timestamp": "2024-02-14T14:34:38.075Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).",
  "completion_len": 229,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.094Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).",
  "raw_completion_len": 229,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.094Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).",
  "timestamp": "2024-02-14T14:34:38.103Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).",
  "timestamp": "2024-02-14T14:34:38.103Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).",
  "timestamp": "2024-02-14T14:34:38.103Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text",
  "completion_len": 233,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.120Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text",
  "raw_completion_len": 233,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.120Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text",
  "timestamp": "2024-02-14T14:34:38.130Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text",
  "timestamp": "2024-02-14T14:34:38.130Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text",
  "timestamp": "2024-02-14T14:34:38.130Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;",
  "completion_len": 234,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.163Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;",
  "raw_completion_len": 234,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.163Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;",
  "timestamp": "2024-02-14T14:34:38.177Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;",
  "timestamp": "2024-02-14T14:34:38.177Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;",
  "timestamp": "2024-02-14T14:34:38.177Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n",
  "completion_len": 235,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.210Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n",
  "raw_completion_len": 235,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.210Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n",
  "timestamp": "2024-02-14T14:34:38.220Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n",
  "timestamp": "2024-02-14T14:34:38.220Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n",
  "timestamp": "2024-02-14T14:34:38.220Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t",
  "completion_len": 236,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.220Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t",
  "raw_completion_len": 236,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.220Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t",
  "timestamp": "2024-02-14T14:34:38.230Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t",
  "timestamp": "2024-02-14T14:34:38.230Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t",
  "timestamp": "2024-02-14T14:34:38.230Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif",
  "completion_len": 239,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.231Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif",
  "raw_completion_len": 239,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.231Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif",
  "timestamp": "2024-02-14T14:34:38.240Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif",
  "timestamp": "2024-02-14T14:34:38.240Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif",
  "timestamp": "2024-02-14T14:34:38.240Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!",
  "completion_len": 242,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.258Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!",
  "raw_completion_len": 242,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.258Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!",
  "timestamp": "2024-02-14T14:34:38.268Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!",
  "timestamp": "2024-02-14T14:34:38.268Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!",
  "timestamp": "2024-02-14T14:34:38.268Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!current",
  "completion_len": 249,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.287Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!current",
  "raw_completion_len": 249,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.287Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!current",
  "timestamp": "2024-02-14T14:34:38.297Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!current",
  "timestamp": "2024-02-14T14:34:38.297Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!current",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!current",
  "timestamp": "2024-02-14T14:34:38.297Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine",
  "completion_len": 253,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.323Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine",
  "raw_completion_len": 253,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.323Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine",
  "timestamp": "2024-02-14T14:34:38.333Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine",
  "timestamp": "2024-02-14T14:34:38.333Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine",
  "timestamp": "2024-02-14T14:34:38.333Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.",
  "completion_len": 254,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.343Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.",
  "raw_completion_len": 254,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.343Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.",
  "timestamp": "2024-02-14T14:34:38.352Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.",
  "timestamp": "2024-02-14T14:34:38.352Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.",
  "timestamp": "2024-02-14T14:34:38.352Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim",
  "completion_len": 258,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.368Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim",
  "raw_completion_len": 258,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.368Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim",
  "timestamp": "2024-02-14T14:34:38.381Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim",
  "timestamp": "2024-02-14T14:34:38.381Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim",
  "timestamp": "2024-02-14T14:34:38.381Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim())",
  "completion_len": 261,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.397Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim())",
  "raw_completion_len": 261,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.397Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim())",
  "timestamp": "2024-02-14T14:34:38.407Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim())",
  "timestamp": "2024-02-14T14:34:38.407Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim())",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim())",
  "timestamp": "2024-02-14T14:34:38.407Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {",
  "completion_len": 263,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.424Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {",
  "raw_completion_len": 263,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.424Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {",
  "timestamp": "2024-02-14T14:34:38.433Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {",
  "timestamp": "2024-02-14T14:34:38.433Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {",
  "timestamp": "2024-02-14T14:34:38.433Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n",
  "completion_len": 264,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.488Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n",
  "raw_completion_len": 264,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.488Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n",
  "timestamp": "2024-02-14T14:34:38.497Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n",
  "timestamp": "2024-02-14T14:34:38.498Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n",
  "timestamp": "2024-02-14T14:34:38.498Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t",
  "completion_len": 266,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.498Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t",
  "raw_completion_len": 266,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.498Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t",
  "timestamp": "2024-02-14T14:34:38.507Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t",
  "timestamp": "2024-02-14T14:34:38.508Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t",
  "timestamp": "2024-02-14T14:34:38.508Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn",
  "completion_len": 273,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.509Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn",
  "raw_completion_len": 273,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.509Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn",
  "timestamp": "2024-02-14T14:34:38.518Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn",
  "timestamp": "2024-02-14T14:34:38.518Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn",
  "timestamp": "2024-02-14T14:34:38.519Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null",
  "completion_len": 278,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.537Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null",
  "raw_completion_len": 278,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.537Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null",
  "timestamp": "2024-02-14T14:34:38.547Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null",
  "timestamp": "2024-02-14T14:34:38.547Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null",
  "timestamp": "2024-02-14T14:34:38.547Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;",
  "completion_len": 279,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.563Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;",
  "raw_completion_len": 279,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.563Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;",
  "timestamp": "2024-02-14T14:34:38.574Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;",
  "timestamp": "2024-02-14T14:34:38.574Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;",
  "timestamp": "2024-02-14T14:34:38.574Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n",
  "completion_len": 280,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.626Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n",
  "raw_completion_len": 280,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.626Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n",
  "timestamp": "2024-02-14T14:34:38.635Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n",
  "timestamp": "2024-02-14T14:34:38.635Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n",
  "timestamp": "2024-02-14T14:34:38.635Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t",
  "completion_len": 281,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.635Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t",
  "raw_completion_len": 281,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.635Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t",
  "timestamp": "2024-02-14T14:34:38.646Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t",
  "timestamp": "2024-02-14T14:34:38.646Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t",
  "timestamp": "2024-02-14T14:34:38.646Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}",
  "completion_len": 283,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.653Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}",
  "raw_completion_len": 283,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.653Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}",
  "timestamp": "2024-02-14T14:34:38.662Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}",
  "timestamp": "2024-02-14T14:34:38.662Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}",
  "timestamp": "2024-02-14T14:34:38.662Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n",
  "completion_len": 284,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.707Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n",
  "raw_completion_len": 284,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.707Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n",
  "timestamp": "2024-02-14T14:34:38.719Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n",
  "timestamp": "2024-02-14T14:34:38.719Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n",
  "timestamp": "2024-02-14T14:34:38.719Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "completion_len": 286,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.720Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "raw_completion_len": 286,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.720Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "timestamp": "2024-02-14T14:34:38.725Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "timestamp": "2024-02-14T14:34:38.726Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "timestamp": "2024-02-14T14:34:38.726Z"
}
{
  "message": "sidecar.shouldYieldFirstCompletion",
  "event_name": "should_yield_first_completion",
  "should_yield_first_completion": true,
  "multiline": true,
  "completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "completion_len": 286,
  "hotStreakExtractor": "present",
  "timestamp": "2024-02-14T14:34:38.768Z"
}
{
  "message": "sidecar.hotstreak.completion",
  "event_name": "hotstreak_extract",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "raw_completion_len": 286,
  "is_request_ended": false,
  "id": "completions-171",
  "timestamp": "2024-02-14T14:34:38.768Z"
}
{
  "message": "sidecar.canUsePartialCompletion.parse",
  "event_name": "sidecar.can_use_partial_completion.parse_truncate_completion",
  "id": "completions-171",
  "partial_response": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "timestamp": "2024-02-14T14:34:38.773Z"
}
{
  "message": "sidecar.hotstreak.completionExtract",
  "event_name": "sidecar.hotstreak.extractCompletion",
  "completion": null,
  "id": "completions-171",
  "is_request_ended": false,
  "unprocessedCompletion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "timestamp": "2024-02-14T14:34:38.773Z"
}
{
  "message": "sidecar.hotstreak.no_completion",
  "event_name": "sidecar.hotstreak.no_completion",
  "id": "completions-171",
  "raw_completion": "(triggerKind === TriggerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "unprocessed_completion": "gerKind.Manual && !multilineTrigger) {\n\t\t// If the user manually triggered the completion, we should not make a request if the\n\t\t// current line is empty.\n\t\tconst currentLine = document.lineAt(position.line).text;\n\t\tif (!currentLine.trim()) {\n\t\t\treturn null;\n\t\t}\n\t}",
  "timestamp": "2024-02-14T14:34:38.773Z"
}

diff --git a/extensions/codestory/src/completions/providers/aideAgentProvider.ts b/extensions/codestory/src/completions/providers/aideAgentProvider.ts
index 1f21fe881fd..28aa2dc7654 100644
--- a/extensions/codestory/src/completions/providers/aideAgentProvider.ts
+++ b/extensions/codestory/src/completions/providers/aideAgentProvider.ts
@@ -127,6 +127,7 @@ export class AideAgentSessionProvider implements vscode.AideSessionParticipant {
 		}
 		const editStreamEvent = request;
 		const fileDocument = editStreamEvent.fs_file_path;
+		console.log(editStreamEvent.event);
 		if ('Start' === editStreamEvent.event) {
 			const timeNow = Date.now();
 			const document = await vscode.workspace.openTextDocument(fileDocument);
@@ -165,7 +166,10 @@ export class AideAgentSessionProvider implements vscode.AideSessionParticipant {
 				await editsManager.streamProcessor.processLine(currentLine);
 			}
 			editsManager.streamProcessor.cleanup();
-
+			const edits = new vscode.WorkspaceEdit();
+			edits.insert(vscode.Uri.file('undoStop'), new vscode.Position(0, 0), 'undo');
+			// we send over an empty code edit
+			this.openResponseStream?.codeEdit(edits);
 			await vscode.workspace.save(vscode.Uri.file(editStreamEvent.fs_file_path)); // save files upon stream completion
 			console.log('provideEditsStreamed::finished', editStreamEvent.fs_file_path);
 			// delete this from our map
@@ -244,6 +248,7 @@ export class AideAgentSessionProvider implements vscode.AideSessionParticipant {
 			responseStream.close();
 			return;
 		}
+		this.openResponseStream = responseStream;

 		const query = event.prompt;
 		if (event.mode === vscode.AideAgentMode.Chat) {
diff --git a/src/vs/workbench/contrib/aideAgent/browser/aideAgentCodeEditingService.ts b/src/vs/workbench/contrib/aideAgent/browser/aideAgentCodeEditingService.ts
index 02edd81a559..ee44bbc293b 100644
--- a/src/vs/workbench/contrib/aideAgent/browser/aideAgentCodeEditingService.ts
+++ b/src/vs/workbench/contrib/aideAgent/browser/aideAgentCodeEditingService.ts
@@ -189,7 +189,8 @@ class AideAgentCodeEditingSession extends Disposable implements IAideAgentCodeEd
 		}

 		codeEdits.hunkData.ignoreTextModelNChanges = true;
-		codeEdits.textModelN.pushEditOperations(null, [workspaceEdit.textEdit], () => null);
+		codeEdits.textModelN.applyEdits([workspaceEdit.textEdit]);
+		// codeEdits.textModelN.pushEditOperations(null, [workspaceEdit.textEdit], () => null);
 		this._register(codeEdits.textModelN.onDidChangeContent(e => {
 			if (e.isUndoing) {
 				this.handleUndoEditEvent(resource, e.changes);
